name: Angular GitHub CI/CD
on:
  push:
    tags:
      - v*
    branches:
      - main
jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build
        run: |
            npm run build:prod

    #   - name: Lint
    #     run: |
    #       npm run lint

    #   - name: Test
    #     run: |
    #         npm run test:headless
      # - name: Create release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref_name }}
      #   run: |
      #     echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
      #     echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      # - name: Conventional Changelog Action
      #   id: changelog
      #   uses: 3si-khanhnv/angular-github-actions@main
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     output-file: "false"

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.changelog.outputs.skipped == 'false' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.changelog.outputs.tag }}
      #     release_name: ${{ steps.changelog.outputs.tag }}
      #     body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Deploy
        run: |
          npm run deploy

  # deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout branch
  #       uses: actions/checkout@v2

  #     - name: Generate release tag
  #       id: generate_release_tag
  #       uses: 3si-khanhnv/angular-github-actions@main
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         tag_prefix: 'v'
  #         tag_template: 'yyyy.mm.dd.i'

  #     - name: Create Release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.generate_release_tag.outputs.next_release_tag }}
  #         release_name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}